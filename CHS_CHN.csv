Issue Type,Issue key,Issue id,Summary,Assignee,Assignee Id,Reporter,Reporter Id,Priority,Status,Resolution,Created,Updated,Due date,Custom field ([CHART] Date of First Response),Custom field (Actual start),Description
Story,CHS-253,10252,Find Available Slot ELLKAY Cloud Function,Himanshu Pant,712020:d50118c4-bccd-4ee3-aad3-9b4c3bc9a922,Sarah Torres,712020:c3625edf-46a1-4a8a-b59e-a876d35ee7c5,Medium,1_Requirements,,18-12-2023 20:25,19-12-2023 11:32,,22:01.1,,"*First Read*: [https://github.com/denimhealth/cloud_functions/blob/qa/ellkay.md|https://github.com/denimhealth/cloud_functions/blob/qa/ellkay.md|smart-link]

*Ellkay api endpoint for available slots* : [https://lkcloud-api.readme.io/reference/post_lkappointments-getopenappointmentslots|https://lkcloud-api.readme.io/reference/post_lkappointments-getopenappointmentslots|smart-link] 

*Task:*

{noformat}Given a patientId, and  physicianIds. 
Return 3 first available slot.

Set appointmentTypes arbitrary to satisfy request requirements.{noformat}

*Expected Models:*

{noformat}Input: (c) in models.py.
- patient_id : str
- physicianIds : str (think a way dont need physicianIds for rather just use facilityId )

DiaglogflowAvailableSlot:
    slot id
    start time
    doctor_name
    facility_name

Output: (DiaglogflowAvailableOutput) in models.py.
- available_slots : List[DiaglogflowAvailableSlot]
{noformat}

*Unit Testing:*

{noformat}# To write this queries you can change the dateRange start and end to the exact number of slots you want.  
# patient with no slots. Should return empty list. 
# patient with 1 slot in the future. Should return list length 1. Check all as expected fields.
# patient with 2 slot in the future. Should return list length 2.  Check all as expected fields.
# patient with 3 slot in the future. Should return list length 3. Check all as expected fields.
# patient with more slot in the future. Should return list length 3. {noformat}





*appointmentTypes*
{
  ""appointmentTypes"": [
    {
      ""name"": ""New Patient - 30"",
      ""code"": ""1"",
      ""id"": ""899""
    },
    {
      ""name"": ""Dermabrasion"",
      ""code"": ""10"",
      ""id"": ""900""
    },
    {
      ""name"": ""Echo(P) - 30"",
      ""code"": ""100"",
      ""id"": ""901""
    },
    {
      ""name"": ""Routine Foot Care(P) - 30"",
      ""code"": ""101"",
      ""id"": ""902""
    },
    {
      ""name"": ""Stress Test(P) - 60"",
      ""code"": ""102"",
      ""id"": ""903""
    },
    {
      ""name"": ""Cancel/Doctor(R) - 15"",
      ""code"": ""103"",
      ""id"": ""904""
    },
    {
      ""name"": ""Cancel/Patient(R) - 15"",
      ""code"": ""104"",
      ""id"": ""905""
    },
    {
      ""name"": ""Confirmed(R) - 15"",
      ""code"": ""105"",
      ""id"": ""906""
    },
    {
      ""name"": ""Confirmed(R) - 30"",
      ""code"": ""106"",
      ""id"": ""907""
    },
    {
      ""name"": ""Confirmed(R) - 60"",
      ""code"": ""107"",
      ""id"": ""908""
    },
    {
      ""name"": ""Left Message-Home(R) - 15"",
      ""code"": ""108"",
      ""id"": ""909""
    },
    {
      ""name"": ""Left Message-Work(R) - 15"",
      ""code"": ""109"",
      ""id"": ""910""
    },
    {
      ""name"": ""Chem Peels"",
      ""code"": ""11"",
      ""id"": ""911""
    },
    {
      ""name"": ""Message/Reminders(R) - 15"",
      ""code"": ""110"",
      ""id"": ""912""
    },
    {
      ""name"": ""Needs Eligibility Verification(R) - 60"",
      ""code"": ""111"",
      ""id"": ""913""
    },
    {
      ""name"": ""Needs Referral(R) - 15"",
      ""code"": ""112"",
      ""id"": ""914""
    },
    {
      ""name"": ""Needs Referral(R) - 30"",
      ""code"": ""113"",
      ""id"": ""915""
    },
    {
      ""name"": ""Needs Referral(R) - 60"",
      ""code"": ""114"",
      ""id"": ""916""
    },
    {
      ""name"": ""Needs Referral(R) - 90"",
      ""code"": ""115"",
      ""id"": ""917""
    },
    {
      ""name"": ""No Show(R) - 15"",
      ""code"": ""116"",
      ""id"": ""918""
    },
    {
      ""name"": ""No Show(R) - 30"",
      ""code"": ""117"",
      ""id"": ""919""
    },
    {
      ""name"": ""Cancer Screen"",
      ""code"": ""12"",
      ""id"": ""920""
    },
    {
      ""name"": ""Established Patient Complex"",
      ""code"": ""13"",
      ""id"": ""921""
    },
    {
      ""name"": ""Routine Foot Care"",
      ""code"": ""14"",
      ""id"": ""922""
    },
    {
      ""name"": ""Follow Up Patient"",
      ""code"": ""15"",
      ""id"": ""923""
    },
    {
      ""name"": ""Meeting - 60"",
      ""code"": ""16"",
      ""id"": ""924""
    },
    {
      ""name"": ""Annual Patient"",
      ""code"": ""2"",
      ""id"": ""925""
    },
    {
      ""name"": ""Vacation (half day)"",
      ""code"": ""25"",
      ""id"": ""926""
    },
    {
      ""name"": ""Seminar JH"",
      ""code"": ""29"",
      ""id"": ""927""
    },
    {
      ""name"": ""Follow Up - 15"",
      ""code"": ""3"",
      ""id"": ""928""
    },
    {
      ""name"": ""Surgery - 60"",
      ""code"": ""30"",
      ""id"": ""929""
    },
    {
      ""name"": ""Holiday (all day)"",
      ""code"": ""32"",
      ""id"": ""930""
    },
    {
      ""name"": ""Out of Office (half day)"",
      ""code"": ""33"",
      ""id"": ""931""
    },
    {
      ""name"": ""Same Day"",
      ""code"": ""34"",
      ""id"": ""932""
    },
    {
      ""name"": ""Foot Care SJPA"",
      ""code"": ""37"",
      ""id"": ""933""
    },
    {
      ""name"": ""Out of Office"",
      ""code"": ""39"",
      ""id"": ""934""
    },
    {
      ""name"": ""Established Patient Routine"",
      ""code"": ""4"",
      ""id"": ""935""
    },
    {
      ""name"": ""Blood Work LAB"",
      ""code"": ""41"",
      ""id"": ""936""
    },
    {
      ""name"": ""PX Work up LAB"",
      ""code"": ""42"",
      ""id"": ""937""
    },
    {
      ""name"": ""Injection LAB"",
      ""code"": ""43"",
      ""id"": ""938""
    },
    {
      ""name"": ""UA Only LAB"",
      ""code"": ""44"",
      ""id"": ""939""
    },
    {
      ""name"": ""B/P Check LAB"",
      ""code"": ""45"",
      ""id"": ""940""
    },
    {
      ""name"": ""Cardio Test -CardioRm"",
      ""code"": ""46"",
      ""id"": ""941""
    },
    {
      ""name"": ""EKG Minor -CardioRm"",
      ""code"": ""47"",
      ""id"": ""942""
    },
    {
      ""name"": ""30 Min Procedure RmA"",
      ""code"": ""48"",
      ""id"": ""943""
    },
    {
      ""name"": ""60 Min Procedure RmA"",
      ""code"": ""49"",
      ""id"": ""944""
    },
    {
      ""name"": ""Established Patient-New Problem"",
      ""code"": ""5"",
      ""id"": ""945""
    },
    {
      ""name"": ""Skin Debridment RmA"",
      ""code"": ""50"",
      ""id"": ""946""
    },
    {
      ""name"": ""Diabetic Foot Care RmA"",
      ""code"": ""51"",
      ""id"": ""947""
    },
    {
      ""name"": ""Needs Precertification"",
      ""code"": ""52"",
      ""id"": ""948""
    },
    {
      ""name"": ""EDC Date"",
      ""code"": ""53"",
      ""id"": ""949""
    },
    {
      ""name"": ""Hospital Rounds - 15"",
      ""code"": ""54"",
      ""id"": ""950""
    },
    {
      ""name"": ""OV brief"",
      ""code"": ""55"",
      ""id"": ""951""
    },
    {
      ""name"": ""Endoscopy -EG"",
      ""code"": ""56"",
      ""id"": ""952""
    },
    {
      ""name"": ""Pre Op Eval AM"",
      ""code"": ""57"",
      ""id"": ""953""
    },
    {
      ""name"": ""Procedure"",
      ""code"": ""58"",
      ""id"": ""954""
    },
    {
      ""name"": ""Hospital Staff Meeting"",
      ""code"": ""59"",
      ""id"": ""955""
    },
    {
      ""name"": ""Cardio Test JH"",
      ""code"": ""6"",
      ""id"": ""956""
    },
    {
      ""name"": ""Work-In-RN Approval Req."",
      ""code"": ""60"",
      ""id"": ""957""
    },
    {
      ""name"": ""New Patient Complex -60"",
      ""code"": ""61"",
      ""id"": ""958""
    },
    {
      ""name"": ""General Surgery"",
      ""code"": ""62"",
      ""id"": ""959""
    },
    {
      ""name"": ""Lipo Surgery"",
      ""code"": ""63"",
      ""id"": ""960""
    },
    {
      ""name"": ""Arthroscopic Surgery"",
      ""code"": ""64"",
      ""id"": ""961""
    },
    {
      ""name"": ""Urgent Care Only"",
      ""code"": ""65"",
      ""id"": ""962""
    },
    {
      ""name"": ""Vacation full day"",
      ""code"": ""66"",
      ""id"": ""963""
    },
    {
      ""name"": ""SCHEDULE NOTES"",
      ""code"": ""67"",
      ""id"": ""964""
    },
    {
      ""name"": ""lunch"",
      ""code"": ""68"",
      ""id"": ""965""
    },
    {
      ""name"": ""GTT (Glucose Tolerance)"",
      ""code"": ""69"",
      ""id"": ""966""
    },
    {
      ""name"": ""New Patient Intermediate"",
      ""code"": ""7"",
      ""id"": ""967""
    },
    {
      ""name"": ""Adult Comprehensive Visit"",
      ""code"": ""70"",
      ""id"": ""968""
    },
    {
      ""name"": ""Annual GYN Visit"",
      ""code"": ""71"",
      ""id"": ""969""
    },
    {
      ""name"": ""Asthma Visit"",
      ""code"": ""72"",
      ""id"": ""970""
    },
    {
      ""name"": ""Diabetes Visit"",
      ""code"": ""73"",
      ""id"": ""971""
    },
    {
      ""name"": ""EKG"",
      ""code"": ""74"",
      ""id"": ""972""
    },
    {
      ""name"": ""Est Office 15 min"",
      ""code"": ""75"",
      ""id"": ""973""
    },
    {
      ""name"": ""Est Office 20 min"",
      ""code"": ""76"",
      ""id"": ""974""
    },
    {
      ""name"": ""Est Office 30 min"",
      ""code"": ""77"",
      ""id"": ""975""
    },
    {
      ""name"": ""Est Office 45 min"",
      ""code"": ""78"",
      ""id"": ""976""
    },
    {
      ""name"": ""Hypertension Visit"",
      ""code"": ""79"",
      ""id"": ""977""
    },
    {
      ""name"": ""Stress Test"",
      ""code"": ""8"",
      ""id"": ""978""
    },
    {
      ""name"": ""New Office 15 min"",
      ""code"": ""80"",
      ""id"": ""979""
    },
    {
      ""name"": ""New Office 20 min"",
      ""code"": ""81"",
      ""id"": ""980""
    },
    {
      ""name"": ""New Office 30 min"",
      ""code"": ""82"",
      ""id"": ""981""
    },
    {
      ""name"": ""New Office 45 min"",
      ""code"": ""83"",
      ""id"": ""982""
    },
    {
      ""name"": ""OB Follow-Up Visit"",
      ""code"": ""84"",
      ""id"": ""983""
    },
    {
      ""name"": ""Office Consult 15 min"",
      ""code"": ""85"",
      ""id"": ""984""
    },
    {
      ""name"": ""Office Consult 20 min"",
      ""code"": ""86"",
      ""id"": ""985""
    },
    {
      ""name"": ""Office Consult 30 min"",
      ""code"": ""87"",
      ""id"": ""986""
    },
    {
      ""name"": ""Office Consult 45 min"",
      ""code"": ""88"",
      ""id"": ""987""
    },
    {
      ""name"": ""Pediatric 9 Month Visit"",
      ""code"": ""89"",
      ""id"": ""988""
    },
    {
      ""name"": ""Echo"",
      ""code"": ""9"",
      ""id"": ""989""
    },
    {
      ""name"": ""Pediatric Otitis Media Visit"",
      ""code"": ""90"",
      ""id"": ""990""
    },
    {
      ""name"": ""URI Visit"",
      ""code"": ""91"",
      ""id"": ""991""
    },
    {
      ""name"": ""B/P Check(P) - 15"",
      ""code"": ""92"",
      ""id"": ""992""
    },
    {
      ""name"": ""Blood Work(P) - 15"",
      ""code"": ""93"",
      ""id"": ""993""
    },
    {
      ""name"": ""Cardio Test(P) - 60"",
      ""code"": ""94"",
      ""id"": ""994""
    },
    {
      ""name"": ""Cardio Test(P) - 90"",
      ""code"": ""95"",
      ""id"": ""995""
    },
    {
      ""name"": ""Cryo Surgery(P) - 45"",
      ""code"": ""96"",
      ""id"": ""996""
    },
    {
      ""name"": ""Injection(P) - 15"",
      ""code"": ""97"",
      ""id"": ""997""
    },
    {
      ""name"": ""New Patient -EG(P) - 60"",
      ""code"": ""98"",
      ""id"": ""998""
    },
    {
      ""name"": ""Throat Culture(P) - 15"",
      ""code"": ""99"",
      ""id"": ""999""
    },
    {
      ""name"": ""Annual Patient"",
      ""code"": ""Annual Patient"",
      ""id"": ""12767""
    },
    {
      ""name"": ""B/P Check(P) - 15"",
      ""code"": ""B/P Check(P) - 15"",
      ""id"": ""12768""
    },
    {
      ""name"": ""Blood Work(P) - 15"",
      ""code"": ""Blood Work(P) - 15"",
      ""id"": ""12769""
    },
    {
      ""name"": ""Cancer Screen"",
      ""code"": ""Cancer Screen"",
      ""id"": ""12770""
    },
    {
      ""name"": ""Cardio Test JH"",
      ""code"": ""Cardio Test JH"",
      ""id"": ""12771""
    },
    {
      ""name"": ""Cardio Test(P) - 60"",
      ""code"": ""Cardio Test(P) - 60"",
      ""id"": ""12772""
    },
    {
      ""name"": ""Cryo Surgery(P) - 45"",
      ""code"": ""Cryo Surgery(P) - 45"",
      ""id"": ""12773""
    },
    {
      ""name"": ""Dermabrasion"",
      ""code"": ""Dermabrasion"",
      ""id"": ""12774""
    },
    {
      ""name"": ""Echo"",
      ""code"": ""Echo"",
      ""id"": ""12775""
    },
    {
      ""name"": ""Echo(P) - 30"",
      ""code"": ""Echo(P) - 30"",
      ""id"": ""12776""
    },
    {
      ""name"": ""Endoscopy -EG"",
      ""code"": ""Endoscopy -EG"",
      ""id"": ""12777""
    },
    {
      ""name"": ""Established Patient Routine"",
      ""code"": ""Established Patient Routine"",
      ""id"": ""12778""
    },
    {
      ""name"": ""Established Patient-New Problem"",
      ""code"": ""Established Patient-New Problem"",
      ""id"": ""12779""
    },
    {
      ""name"": ""Follow Up - 15"",
      ""code"": ""Follow Up - 15"",
      ""id"": ""12780""
    },
    {
      ""name"": ""Follow Up Patient"",
      ""code"": ""Follow Up Patient"",
      ""id"": ""12781""
    },
    {
      ""name"": ""Injection(P) - 15"",
      ""code"": ""Injection(P) - 15"",
      ""id"": ""12782""
    },
    {
      ""name"": ""Needs Precertification"",
      ""code"": ""Needs Precertification"",
      ""id"": ""12783""
    },
    {
      ""name"": ""New Patient - 30"",
      ""code"": ""New Patient - 30"",
      ""id"": ""12784""
    },
    {
      ""name"": ""New Patient -EG(P) - 60"",
      ""code"": ""New Patient -EG(P) - 60"",
      ""id"": ""12785""
    },
    {
      ""name"": ""New Patient Complex -60"",
      ""code"": ""New Patient Complex -60"",
      ""id"": ""12786""
    },
    {
      ""name"": ""New Patient Intermediate"",
      ""code"": ""New Patient Intermediate"",
      ""id"": ""12787""
    },
    {
      ""name"": ""Procedure"",
      ""code"": ""Procedure"",
      ""id"": ""12788""
    },
    {
      ""name"": ""Routine Foot Care(P) - 30"",
      ""code"": ""Routine Foot Care(P) - 30"",
      ""id"": ""12789""
    },
    {
      ""name"": ""Stress Test(P) - 60"",
      ""code"": ""Stress Test(P) - 60"",
      ""id"": ""12790""
    },
    {
      ""name"": ""Surgery - 60"",
      ""code"": ""Surgery - 60"",
      ""id"": ""12791""
    },
    {
      ""name"": ""Throat Culture(P) - 15"",
      ""code"": ""Throat Culture(P) - 15"",
      ""id"": ""12792""
    },
    {
      ""name"": ""Urgent Care Only"",
      ""code"": ""Urgent Care Only"",
      ""id"": ""12793""
    },
    {
      ""name"": ""TeleHealth"",
      ""code"": ""TeleHealth"",
      ""id"": ""12807""
    },
    {
      ""name"": ""96"",
      ""code"": ""96"",
      ""id"": ""12813""
    },
    {
      ""name"": ""42"",
      ""code"": ""42"",
      ""id"": ""12814""
    },
    {
      ""name"": ""37"",
      ""code"": ""37"",
      ""id"": ""12815""
    },
    {
      ""name"": ""2"",
      ""code"": ""2"",
      ""id"": ""12816""
    },
    {
      ""name"": ""103"",
      ""code"": ""103"",
      ""id"": ""12817""
    },
    {
      ""name"": ""10"",
      ""code"": ""10"",
      ""id"": ""12818""
    },
    {
      ""name"": ""1"",
      ""code"": ""1"",
      ""id"": ""12819""
    },
    {
      ""name"": ""PX Work up LAB"",
      ""code"": ""PX Work up LAB"",
      ""id"": ""12820""
    }
  ]"
Story,CHS-252,10251,Find Appointment ELLKAY Cloud Funciton,Sandeep Rao,712020:ed859eaf-e848-4c09-927d-ec26641e0b21,Sarah Torres,712020:c3625edf-46a1-4a8a-b59e-a876d35ee7c5,Medium,1_Requirements,,18-12-2023 19:56,19-12-2023 11:22,,,,"*First Read*: [https://github.com/denimhealth/cloud_functions/blob/qa/ellkay.md|https://github.com/denimhealth/cloud_functions/blob/qa/ellkay.md|smart-link]  

*Ellkay api endpoint for appointments* : ""[https://lkcloud-api.readme.io/reference/post_lkappointments-getappointments|https://lkcloud-api.readme.io/reference/post_lkappointments-getappointments|smart-link] ""   

*Task 1:*

{noformat}Given a patientId, get all appointments for that patient.
- Filter appointments by type only include Booked Pending Waitlist
Return the all appointments in the future as a list of dictionaries.
- Each dictionary object should be consisted with appointment class.
Set start_or_end_date_provided : False
{noformat}

*Task 2:*

{noformat}Given a patientId, and  start date get all appointments. 
- Filter appointments by type only include Booked Pending Waitlist
Return the list of appointments and number of appointments.
- Each dictionary object should be consisted with appointment class.
Set start_or_end_date_provided : True{noformat}


*Task 3:*

{noformat}Given a patientId,  start date  and end date get all appointments. 
- Filter appointments by type only include Booked Pending Waitlist
Return the list of appointments and number of appointments.
- Each dictionary object should be consisted with appointment class.
Set start_or_end_date_provided : True{noformat}



*Implementation Hint for Task1 , Task2, Task3:*


{noformat}def foo(find_appointment_input :FindAppointmentInput):
    if find_appointment_input.start_date is None:
        find_appointment_input.start_date = NOW()
    if find_appointment_input.end_date is None:
        find_appointment_input.end_date = find_appointment_input.start_date + 1 YEAR{noformat}



*Expected Models:*

{noformat}
Input: (FindAppointmentInput) in models.py.
- patient_id : str
- start_date : Optional[str]
- end_date : Optional[str]

DiaglogflowAppointment:
    appointment id
    start time
    doctor_name
    facility_name

Output: (FindAppointmentOutput) in models.py.
- scheduled_appointments : List[DiaglogflowAppointment]
- number_of_scheduled_appointments: int
- start_or_end_date_provided: Bool
{noformat}

 *Unit Testing:*

{noformat}# To write this queries you can change the dateRange start and end to the exact number of appointments you want.  # patient with no appointments. Should return empty list. 
# patient with 1 appointment in the future. Should return list lenght 1. Check all as expected fields.
# patient with 2 appointment in the future. Should return list lenght 2.  Check all as expected fields.
# patient with 3 appointment in the future. Should return list lenght 3. Check all as expected fields.
# patient with n- appointment in the future should  return a list of length n.
{noformat}



*some uncomplete code*


{noformat}import requests
from pprint import pprint as print
from datetime import datetime, timedelta
url = ""https://services.lkcloud.com/LKAppointments/GetAppointments""

now = datetime.now()
some_past_day = now - timedelta(days=10)
some_past_day_str = some_past_day.strftime(""%Y-%m-%dT%H:%M:%S"") 

payload = {
    ""authentication"": {
        ""subscriberKey"": ""shared elsewhere"",
        ""siteServiceKey"":  ""shared elsewhere"",
    },
    ""request"": {
        ""dateRange"": {
            # in production start should be now, you can't schedule any appointments in the past
            # for this testing we will use a date in the past
            # because there is no record of appointments in the future
            ""start"": some_past_day_str,
            ""end"": ""2023-12-31T13:00:00.000""
        },
        ""patientId"": ""4FF18FE1-D3B3-4429-A244-06B3965318AA""
    }
}
headers = {
    ""accept"": ""application/json"",
    ""content-type"": ""application/json""
}

response = requests.post(url, json=payload, headers=headers)

print(len(response.json()))
print(response.json()[0])
print(response.json()[1])
print(response.json()[2])
{noformat}"
Task,CHS-237,10236,Format and bug fixes for Resource Matrix webapp,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Ben Gawiser,712020:0495d639-b09a-4a37-aac2-288a9bc7a5bf,Medium,3_In Progress,,15-12-2023 08:53,19-12-2023 08:37,,28:08.5,,"I found the following issues when testing the Resource Matrix application. Please address them by 22/12/23.

# Text isn't well formatted (e.g. phone numbers splitting lines, the Analyze UX is better. Let's display people that way (but still editable)
# There is no way to get back to the basic search page once you click away (maybe clicking on the Denim icon should take you there)
# When you edit office notes or daily alerts, the expiration UX should also be shown (maybe make these modals)
# Display the alert and notes expiration as part of the daily alert and office notes field (e.g. This note will expire on...)
# Hitting enter after typing in data for a search should kick off the search
# Do not display UUID, that is an internal field only
# File link downloads a text field and not the file. My guess is that you need to download the actual file out of the Cloud Storage bucket. Do you need a new cloud function for that?"
Story,CHS-236,10235,GCP Healthcare API Cloud Function,Sandeep Rao,712020:ed859eaf-e848-4c09-927d-ec26641e0b21,Gokberk Yar,712020:51020152-4fd7-4079-bdda-0c38a4e9c4b8,Medium,3_In Progress,,14-12-2023 19:08,18-12-2023 10:37,,12:52.5,,"Write a cloud function that takes a single string input *patient_medical_description.*
Queries the gcp healthcare api {{""https://healthcare.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/services/nlp:analyzeEntities""}}

with the *patient_medical_description*.
 And returns the response json without any process.


{{Documentation on the api: https://cloud.google.com/healthcare-api/docs/how-tos/nlp#nlp-analyze-entity-vocab-drest  }}

Some params:
PROJECT_ID = “genesys-dialogflow-agent”
REGION = “us-central1""


Query Example from the documentation:

{noformat}cat > request.json << 'EOF'
{
  ""documentContent"": ""Insulin regimen 5 units IV will be administered for diabetes.""
}
EOF


curl -X POST \
    -H ""Authorization: Bearer $(gcloud auth print-access-token)"" \
    -H ""Content-Type: application/json"" \
    -d @request.json \
    ""https://healthcare.googleapis.com/v1/projects/PROJECT_ID/locations/LOCATION/services/nlp:analyzeEntities""{noformat}



For this task create a new service account or use [health-care-api-service@genesys-dialogflow-agent.iam.gserviceaccount.com|mailto:health-care-api-service@genesys-dialogflow-agent.iam.gserviceaccount.com]."
Task,CHS-234,10233,Dialogflow Cloud Functions Get Started,Sandeep Rao,712020:ed859eaf-e848-4c09-927d-ec26641e0b21,Gokberk Yar,712020:51020152-4fd7-4079-bdda-0c38a4e9c4b8,Medium,4_Review,,12-12-2023 10:20,18-12-2023 03:59,,40:26.3,,"This task is a placeholder task to practice, our cloud functions repo. 
Working on a normal task is just adding couple lines of business logic.

We may convert this ticket soon to our get patient id logic once our third party integration is complete.
For the time being,

- create new branch from qa
- Create a new subdirectory in cloud functions repo. 
- And create a new cloud function endpoint. 
- name the endpoint as you wish
- take parameters to your cloud function :  i.e. dob (short for date of birth) and fulllname. 
- return some output response: ie. patient_id, issurance_id, previous_doctor_id (by putting dummy strings for now, dont need to query anything).
- create models.py
- write one unit testcase for your function.
- update ci.yml and other configuration files such that your pytest and pre-commit works as expected.
- push your branch to git.
 - make a PR."
Subtask,CHS-233,10232,Profile page ,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,12-12-2023 08:16,12-12-2023 08:16,,,,
Task,CHS-232,10231,Common Repo Deployment,Silambarasan Duraisamy,712020:3f2226b1-4b7d-4e3e-af61-b423179861a0,Gokberk Yar,712020:51020152-4fd7-4079-bdda-0c38a4e9c4b8,Medium,5_Done,Done,11-12-2023 17:24,14-12-2023 14:14,,51:07.4,,"Background:
Github Repo: [https://github.com/denimhealth/DenimCommon|https://github.com/denimhealth/DenimCommon|smart-link] 
GCP Account: chs-resource-matrix

* I made you admin in github repo, added you the gcp project.


Task: Store the DenimCommon to as python package in Artifact registry. 
 [https://cloud.google.com/artifact-registry/docs/python/store-python|https://cloud.google.com/artifact-registry/docs/python/store-python|smart-link] 

Functional Requirements:
1. Update ci.yml in the repo, and change the deploy part such that code is pushed artifact registry automaticly.

See below snippet created by Chatgpt for pushing code.


{noformat}
    - name: Install Twine
      run: |
        pip install twine

    - name: Build and Publish Package
      run: |
        # Replace this with your actual build and distribution commands
        python setup.py sdist bdist_wheel
        twine upload --repository-url https://LOCATION-docker.pkg.dev/PROJECT-ID/REPO-NAME/pypi/simple/ dist/*


{noformat}

2. Confirm that repo is accesible to other repositories, ie [https://github.com/denimhealth/CHS_Resource_Matrix|https://github.com/denimhealth/CHS_Resource_Matrix|smart-link]  in their requirements.txt

Chatgpt suggests adding a line like:


{noformat}# requirements.txt
my-awesome-package==1.0.0 --extra-index-url https://us-central1-docker.pkg.dev/my-gcp-project/my-repo/pypi/simple/{noformat}"
Subtask,CHS-229,10228,Remove firebase from codebase,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,11-12-2023 08:34,12-12-2023 08:16,,,,
Subtask,CHS-218,10217,Login/logout flow by okta ,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,06-12-2023 08:32,12-12-2023 08:16,,,,
Task,CHS-203,10202,Implement Okta for CHS SSO,Silambarasan Duraisamy,712020:3f2226b1-4b7d-4e3e-af61-b423179861a0,Ben Gawiser,712020:0495d639-b09a-4a37-aac2-288a9bc7a5bf,Medium,3_In Progress,,01-12-2023 09:27,18-12-2023 10:21,,53:17.0,,"The purpose of the ticket is to perform the work necessary to create the SSO integration with Okta in the Admin/Resource Matrix application.

You should have an invite in your email to join our Okta organization. Please use that invitation to go in and create the appropriate application.

 "
Task,CHS-183,10182,Looker Report UI,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,28-11-2023 08:16,18-12-2023 09:00,,,,"UI component for displaying Looker reports within our app. The component should include an <iframe> to embed Looker report and should be responsive. 

This UI can ba accessed by /looker route"
Task,CHS-180,10179,Create UI for editing Resource Matrix Values,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Ben Gawiser,712020:0495d639-b09a-4a37-aac2-288a9bc7a5bf,Medium,4_Review,,27-11-2023 16:28,18-12-2023 08:48,,19:35.7,,"The purpose of this ticket is for the creation of a UI that will allow for the editing of values in the Resource Matrix. Once a user has been authenticated and shown to have rights to edit a specific market’s resource matrix they will have the ability to search for values and then edit and save them. The system will also need to check that the values that they are entering for the fields are valid values.

The check for value validity should be done on the front end and a Cloud Function will be created that will take in the field name and will return a list of valid values for the field."
Subtask,CHS-172,10171,Logout flow if user has logged in using email id/password ,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,22-11-2023 08:26,30-11-2023 08:38,,,,
Subtask,CHS-171,10170,Sign up for new user using email id / password ,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,22-11-2023 08:25,30-11-2023 08:38,,,,
Subtask,CHS-169,10168,Login by Email id / password ,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,22-11-2023 08:25,30-11-2023 08:30,,,,
Task,CHS-163,10162,Continuation of Resource Matrix parsing work,Silambarasan Duraisamy,712020:3f2226b1-4b7d-4e3e-af61-b423179861a0,Ben Gawiser,712020:0495d639-b09a-4a37-aac2-288a9bc7a5bf,Medium,3_In Progress,,18-11-2023 15:22,18-12-2023 10:19,,24:11.7,,"The purpose of this task is to continue the work that was done for the initial Resource Matrix parsing. This should build off of the code that is already available in [https://github.com/denimhealth/CHS_Resource_Matrix/|https://github.com/denimhealth/CHS_Resource_Matrix/|smart-link], specifically the ExcelConversion folder in thamain.t repository.



While working, adjust the output of the Excel_Conversion.py file to not save to a bucket and to save only to your local machine. Here are the acceptance criterion:



# The output file should have data that is completely normalized. If you look at the current output there are sometimes where data ends up in the wrong field. Add special cases or additional logic to ensure that the data is parsed properly.
# For physicians that have left CHS, most of them end up getting left out of the parsing (see the excluded sheets on lines 16-78 in the Excel_Conversion.py file. We should try to get as many of those sheets as possible to parse.
# Once the Excel_Conversion.py file has been completed, change the output to again point to the bucket and run it.
# Refactor the code, merging the Excel_Conversion.py and main.py files into a single module so that there isn’t repeated code.
# Test that the cloud function still works after the changes are made to the main.py module."
Subtask,CHS-160,10159," Login flow , Log out flow by google",Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,15-11-2023 08:32,27-11-2023 08:31,,,,
Task,CHS-159,10158,Authentication in admin app,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,15-11-2023 08:32,18-12-2023 10:23,,,,
Task,CHS-145,10144,UI exploration for representing information from spreadsheets inside denimhealth admin ui app,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,10-11-2023 06:02,19-12-2023 08:30,,24:31.9,,
Subtask,CHS-110,10109,Input,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,06-11-2023 04:29,18-12-2023 10:23,,,,
Subtask,CHS-109,10108,Navbar,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,06-11-2023 04:29,18-12-2023 10:23,,,,
Task,CHS-108,10107,Denim Design System Components based on Chakra UI,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,06-11-2023 04:27,18-12-2023 10:23,,,,"The objective of this JIRA ticket is to create a foundation for the Denim UI design system by :   

* implementing the basic atoms following the principles of the Atomic Design System. 
* creating reusable components 

This will provide a structured and modular foundation for building UI components."
Subtask,CHS-105,10104,FE app deployment with CI/CD using GCP,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,03-11-2023 02:18,16-11-2023 08:04,,,,
Subtask,CHS-104,10103,"Setup Frontend Repository with React Using Vite/webpack, typescript ,prettier, Airbnb style guide, and ESLint",Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Medium,5_Done,Done,03-11-2023 01:52,07-11-2023 04:27,,,,
Story,CHS-92,10091,Search (and find) information about a practice or provider,Divyum,712020:acd3751f-379c-4e62-a95e-2686853dee62,Marc Lachs,712020:93dcf9e9-6c63-4874-99bd-ccb9ea569441,Medium,5_Done,Done,30-10-2023 10:04,18-12-2023 10:25,,51:15.2,,"*User Story*

As an agent working my call queue in Genesys, I need to search (and find) information about a practice or provider. 

*Functional requirements*

* Search needs to be fast (=<300 ms) in order to support interactions with a patient during a live phone call
* Need to be able to search by DID (phone number), practice name, or provider name
* Page needs to conform to Denim UI style standards [https://www.figma.com/file/pbxOvIP4gJGW160vClRsQT/Denim-Design-System-(Chakra-UI)?type=design&node-id=0-1&mode=design&t=kCc5MTOe3P7Qdv9S-0|https://www.figma.com/file/pbxOvIP4gJGW160vClRsQT/Denim-Design-System-(Chakra-UI)?type=design&node-id=0-1&mode=design&t=kCc5MTOe3P7Qdv9S-0|smart-link]
* Authentication will eventually be handled by SSO integration with the client, but for the moment, it should be handled by having an allow list of Google accounts.
* System should utilize Google App Engine or Cloud Run.
* Front end will need to call a Cloud Function with some combination of phone number, doctor name, or practice name. The user will need to enter a search value into one or more of these fields.
* The Cloud Function will return a URL of an Spreadsheet (Google or Excel) that should be opened in a new tab for the user automatically."
Story,CHS-34,10033,Report: All Conversations (with PHI),Himanshu Pant,712020:d50118c4-bccd-4ee3-aad3-9b4c3bc9a922,Marc Lachs,712020:93dcf9e9-6c63-4874-99bd-ccb9ea569441,Medium,4_Review,,20-10-2023 13:35,14-12-2023 14:10,,37:10.9,,"*User Story*

We’ll need to understand all conversations that the system handles. This is a fairly simplistic data dump of all calls and their attributes. 

This report contains PHI.

*Functional Requirements*

* Able to filter by customer or to view across all customers
* Time-filtered
* Available in a format that can be loaded into a data warehouse
* Data returns in seconds, not minutes
* Includes these data elements:
** Conversation ID for add’l lookup [ex: 00235]
** Call Start Date/Time, probably in UTC for clarity [ex: 2023-10-25 14:05:00]
** Call Length [ex: 00:06:35]
** CID [ex: 512-555-1111]
** CID readable name (if avail) [ex: “Jane Smith”]
** DID [ex: 512-555-9999]
** DID readable name [ex: “Ridgemont Clinic”]
** [more tbd]
*** Number of Turns (# of bot/caller/bot/etc exchanges) [ex: 9]{color:#ffc400} _(added 12/8/23 … separate into a follow-up ticket if these end up too difficult/time-consuming for the first iteration)_ {color}

*Out of Scope*

* No customer self-service
* No fancy formatting and visualizations
* No report-specific authentication? Can it be handled by limited access to the reporting system?
* No logging of report requests

*Acceptance Criteria*

* [https://denimhealth.atlassian.net/l/cp/Uh0q8vuw|https://denimhealth.atlassian.net/l/cp/Uh0q8vuw|smart-link] "
